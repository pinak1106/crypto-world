{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/Loader.jsx","services/cryptoApi.js","components/Homepage.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["Navbar","className","src","icon","size","Title","level","to","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Loader","cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","price","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","useState","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","rank","NumberOutlined","volume","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","name","slug","defaultValue","placeholder","onChange","map","date","HTMLReactParser","description","links","link","type","href","target","rel","Cryptocurrencies","cryptosList","coins","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","filterdData","filter","toLowerCase","includes","e","gutter","currency","xs","sm","large","id","extra","iconUrl","alt","hoverable","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","lg","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","element","color","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","require","config","console","log","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.4df5f736.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined} from '@ant-design/icons';\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\"/>\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Crypto World</Link>\r\n                </Typography.Title>\r\n            </div>\r\n            <Menu theme=\"dark\">\r\n                <Menu.Item icon={<HomeOutlined/>}>\r\n                    <Link to=\"/\">Home</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item icon={<FundOutlined/>}>\r\n                    <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item icon={<MoneyCollectOutlined/>}>\r\n                    <Link to=\"/exchanges\">Exchanges</Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item icon={<BulbOutlined/>}>\r\n                    <Link to=\"/news\">News</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport {Spin} from 'antd';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='loader'>\r\n            <Spin/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nconst  cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': process.env.REACT_APP_API_KEY\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoApiHeaders});\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`)\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`)\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({coinId, timeperiod}) => createRequest(`/coin/${coinId}/history/${timeperiod}`)\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest(`/exchanges`)\r\n        }),\r\n        \r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery,\r\n    useGetExchangesQuery,\r\n} = cryptoApi;\r\n\r\n// var options = {\r\n//     method: 'GET',\r\n//     url: 'https://coinranking1.p.rapidapi.com/exchanges',\r\n//     headers: {\r\n//       'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n//       'x-rapidapi-key':\r\n//     }\r\n//   };","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport {Cryptocurrencies, News} from '../components';\r\nimport Loader from './Loader';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\nconst {Title} = Typography\r\n\r\nconst Homepage = () => {\r\n    const {data, isFetching} = useGetCryptosQuery(10);\r\n    const globalStats = data?.data?.stats;\r\n    if(isFetching) return <Loader/>;\r\n    return (\r\n        <>\r\n            <Title level={2} className=\"heading\">\r\n                Global Crypto Stats\r\n            </Title>\r\n            <Row>\r\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className=\"show-more\">\r\n                    <Link to=\"/cryptocurrencies\">Show More</Link>\r\n                </Title>\r\n            </div>\r\n            <Cryptocurrencies simplified/>\r\n\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n                <Title level={3} className=\"show-more\">\r\n                    <Link to=\"/news\">Show More</Link>\r\n                </Title>\r\n            </div>\r\n            <News simplified/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;","import React,{useState} from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\n// import Loader from './Loader';\r\nimport LineChart from './LineChart';\r\nimport Loader from './Loader';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n    const { coinId } = useParams();\r\n    const [timeperiod, setTimeperiod] = useState('7d');\r\n    const {data, isFetching} = useGetCryptoDetailsQuery(coinId)\r\n    const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n    const cryptoDetails = data?.data?.coin;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    const stats = [\r\n      { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n      { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n      { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n      { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n      { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    ];\r\n  \r\n    const genericStats = [\r\n      { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n      { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n      { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n      { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n      { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails\r\n","import React, {useState, useEffect} from 'react';\r\nimport millify from 'millify';\r\nimport {Link} from 'react-router-dom';\r\nimport {Card, Row, Col, Input} from 'antd';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10 : 100;\r\n    const {data: cryptosList, isFetching} = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState(cryptosList?.data?.coins);\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() => {\r\n        const filterdData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        setCryptos(filterdData)\r\n    },[cryptosList, searchTerm])\r\n    if(isFetching) return <Loader/>;\r\n    return (\r\n        <>\r\n        {!simplified && (\r\n            <div className='search-crypto'>\r\n            <Input placeholder='Search Crypto' onChange={(e) => setSearchTerm(e.target.value)}/>\r\n        </div>\r\n        )}\r\n            <Row gutter={[32,32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} large={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card \r\n                                title={`${currency.rank}. ${currency.name}`} \r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"\" />}\r\n                                hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList?.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n      'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n      'x-rapidapi-key': process.env.REACT_APP_API_KEY\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({url, headers: cryptoNewsHeaders});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptoNewsQuery,\r\n} = cryptoNewsApi;\r\n\r\n\r\n// var options = {\r\n//     method: 'GET',\r\n//     url: 'https://bing-news-search1.p.rapidapi.com/news',\r\n//     params: {safeSearch: 'Off', textFormat: 'Raw'},\r\n//     headers: {\r\n//       'x-bingapis-sdk': 'true',\r\n//       'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n//       'x-rapidapi-key': ''\r\n//     }\r\n//   };","import React,{useState} from 'react';\r\nimport {Select, Typography, Row, Col, Avatar, Card} from 'antd';\r\nimport moment from 'moment';\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport {useGetCryptosQuery} from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst {Text, Title} = Typography;\r\nconst {Option} = Select;\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News'\r\nconst News = ({simplified}) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const {data: cryptoNews} = useGetCryptoNewsQuery({newsCategory, count: simplified ? 6 : 12})\r\n    const {data} = useGetCryptosQuery(100);\r\n\r\n    if(!cryptoNews?.value) return <Loader/>\r\n    return (\r\n      <Row gutter={[24, 24]}>\r\n          {!simplified && (\r\n              <Col>\r\n                <Select\r\n                    showSearch\r\n                    className='select-news'\r\n                    placeholder='Select a Crypto'\r\n                    optionFilterProp='children'\r\n                    onChange={(value) => setNewsCategory(value)}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                >\r\n                    <Option value='Cryptocurrency'>Cryptocurrency</Option>\r\n                    {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                </Select>\r\n              </Col>\r\n          )}\r\n\r\n        {cryptoNews?.value.map((news, i) => (\r\n          <Col xs={24} sm={12} lg={8} key={i}>\r\n            <Card hoverable className=\"news-card\">\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news-image-container\">\r\n                  <Title className=\"news-title\" level={4}>\r\n                    {news.name}\r\n                  </Title>\r\n                  <img\r\n                    style={{maxWidth: '200px', maxHeight: '100px'}}\r\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                    alt=\"news\"\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {news.description > 100\r\n                    ? `${news.description.substring(0, 100)} ....`\r\n                    : news.description}\r\n                </p>\r\n                <div className='provider-container'>\r\n                    <div>\r\n                        <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage } alt='' />\r\n                        <Text className='provider-name'>{news.provider[0]?.name}</Text>\r\n                    </div>\r\n                    <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                </div>\r\n              </a>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    );\r\n}\r\n\r\nexport default News\r\n","import { Routes, Route, Link} from 'react-router-dom';\r\nimport {Layout, Typography, Space} from 'antd';\r\nimport {Navbar, Exchanges, Homepage, News, CryptoDetails, Cryptocurrencies} from './components';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar/>\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Routes>\r\n              <Route exact path=\"/\" element={<Homepage/>} />\r\n\r\n              <Route exact path=\"/exchanges\" element={<Exchanges/>} />\r\n                \r\n              <Route exact path=\"/cryptocurrencies\" element={<Cryptocurrencies/>} />\r\n                \r\n              <Route exact path=\"/Crypto/:coinId\" element={<CryptoDetails/>} />\r\n                \r\n              <Route exact path=\"/news\" element={<News/>} />\r\n            </Routes>\r\n          </div>\r\n        </Layout>\r\n      \r\n      <div className=\"footer\" >\r\n        <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\r\n            Crypto World<br/>\r\n            All Rights Reserved\r\n        </Typography.Title>\r\n        <Space>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/exchanges\">Exchanges</Link>\r\n          <Link to=\"/news\">News</Link>\r\n        </Space>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './app/store';\r\nrequire('dotenv').config();\r\n\r\nconsole.log(process.env.REACT_APP_API_KEY)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}